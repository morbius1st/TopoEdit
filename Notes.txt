Code locations

Shared Code
* Code that can be used by a revit or non-revit project


Shared Code Revit
* code that can be used in a revit project but not in a non-revit project (requires access to revit .DLL's)


Shared Code No Revit
* code thatcan be used in a non-revit project but not in a revit project (i.e. faux revit code)

Shared App
* sample project for a window that could be used by multiple projects


Path Elements

* Jack \ ... Functions\PathSelectManager.cs - the "live" version
* Jackrvttst01  Functions\PathSelectManager.cs - faux version - that uses faux data
* Jacktests01   Functions\PathSelectManager.cs -  faux version - that uses faux data

two below to be replaced
* jacktests01\support\info.cs -> PathSegmentType (enum)
* jacktests01\support\pathsegment.cs -> PathSegment

current versions
* shcode \ ... \ PathCompInfo.cs -> PathCompType (enum)
* ShCode \ ... \ PathComponent.cs -> PathComponent
* ShCode \ ... \ PathComponent.cs -> PathCompPoint
* shCode \ ... \ PathDataManager.cs -> PathDataManager
* ShCode \ ... \ PathManager.cs -> PathManager




Code reorg / moves / locations

() class
[] struct
{} field or property const
// enum

* Library
> RevitExtensions
	(XYZextensions)
	** XYZ Multiply                      - multiply the point by an XYZ (i.e. X * X, etc.)
	* ToUV                               - convert an XYZ to a UV
	* ToXYZ                              - convert a UV to an XYZ
	* DistanceXY                         - calculate the planar distance between two XYZ points
	* DistanceZ                          - calculate the Z delta between two points

> RevitView
	[ViewType]                           - Information about a Revit View
	(RevitView)                          - Revit View Utilities * enums

* in TopoEdit
> BoundingCube file
	(BoundingCube class)
	** BoundingCube (list)               - list of points of a BoundingCube 
	** IsWithinCube                      - determine if an XYZ point is within the cube
	** IsWithinBox                       - determine if an XYZ point is within the plan of the cube

> Extensions
	(View Extensions class)
	** IsElementVisibleInView            - Determine whether an element is visible in a view
	
	(PointIlistExtensions)
	** ContainsPoint                     - determine if an XYZ point is within the IList of points

> PickedBox2
	(PickedBox2)                         - adjusts the points from "GetPickedBox" to be rational

> PointMeasurement
	[PointMeasurement struct]            - two points & the distances between them

> Select
	(Select)
	** GetPickedBox                      - general routine to get points of a selection box
	** GetPointsByLine                   - get two points by selecting a line
	** GetPoint                          - Gets a point within the boundary of the topo surface
	** GetStartPoint                     - using GetPoint - gets a start point (bool if OK)
	** GetEndPoint                       - using GetPoint - gets an end point (bool if OK)
	** GetLEndPoints                     - gets the start and end points  (bool if OK)

> TopographyEditFailuresPreprocessor
	* a TopographyEditFailuresPreprocessor that ignores errors
	* a TopographyEditFailuresPreprocessor that lists errors in a task dialog

> TopoSurfaceUtils
	(TopoSurfaceUtils)
	** GetTopoSurface                    - trys to automatically select the topo surface - if only one - got it else ask
	** PickTopographySurface             - select a topo surface
	** GetPointWithinTopo                - pick a point but must be within the boundary of the topo surface
	** ProcessTriangles                  - get the boundary edges of a mesh (converted topo surface)
	** SequenceVertices                  - get the list of boundary points
	
	(TopographySurfaceSelectionFilter)   - a selection filter for topo surfaces
	
	(TopoSurfaceExtension)
	{BoundaryPointsValid}                - bool - is the boundary point valid
	** GetName                           - gets the name of the topo surface
	** GetTopoInfo                       - debug routine - lists all all of the elements in a topo surface
	** IsInteriorPoint                   - determine if the selected point is an interior point
	** FindCloseBoundaryPoints           - find the closest boundary point to the given point
	** GetBoundaryPointsOrdered          - get a list of boundary points
	** InvalidateBoundaryPoints          - flags the boundary point as invalid

> TransactionGroupStack
	(TransactionGroupStack)              - a transaction group IList

> Utils
	(Utils)
	{snaps}                              - point selection snaps
	{GLineStyles}                        - IList of Graphic Styles for lines
	** DocUnits                          - create a units object set to decimal feet - OBSOLETE CODE
	** GetBitmapImage                    - load an image from embeded resource
	** RestrictValuetoMinMax             - restrict a double to between a max and min
	** ParseUnitLength                   - parse a string that represents a distance and provide a double
	** GetGeoElemInfo                    - debug routine - lists information about a geometry element
	** GetAllElements                    - debug routine - get all elements in the DB and lists them
	** DrawModelLine                     - draws a model line from start to end
	** DrawDetailLine                    - draws a detail line from start to end
	** GetLineStyles                     - create the list of Line styles
	** GetReferencePlanes                - Get a list of reference planes and levels
	** GetTemp3DView                     - not sure - finds the first 3D views?
	** DistanceBetweenPointsXY           - distance between two points
	** GetSurfacePoint                   - find a point on the face of a toposurface (will fail if topo surface is outside of the found 3D view)
	** GetParameterAsString              - gets a string based the parameter information provided
	** GetParameterAsElementId           - gets element Id based the parameter information provided
	** SetParameterElementId             - sets element Id based the parameter information provided
	** GetElementParameterInformation    - show the parameter information for the element
	** GetParameterInformation           - show the parameter information for the parameter provided
	** GetElementParameterMapInformation - show the parameter information for the element per the parameter map

	(LineSelectFilter)                   - selection filter for "lines"



