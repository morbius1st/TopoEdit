SELECTION USE CASES

*** create points
** needs min (2) points (beg & end) 
** + (optional) 1+ intermediate points
* path by selection of path elements
  > 1 point (line) or 1 point [end] + 1 point [cen] + rad (arc) point that define a path
  > line = defined point + point from next element
  > arc = defined point & rad + point from next element
* path by selection of points

** needs min (3) points
* region by selection of path elements - per side
* region by selection of multiple points

** modify existing points
* multiple points in plan (general)
* multiple points in vertical view
* multiple points in plan (related / group  [e.g. sidewalk edge])




* point (heirarcaial - 1+ rows (of points))
* collection type (path, region, group, etc.)
* type (root & beg, path end, corner start/end, corner intermediate, row)
* prior point
* next point
> root point 
	* is also path begin and first row point
	* path is stored as row 1 and there are no other rows
> point
	* has existing point & new point
	> existing point
		* when path, the points from the selected elements
		* when new region, the points that define the region
		* when modify, the selected points
	> new point
		* when path, the new vertical location for the existing point
		* when new region, the new vertical location of the existing point
		* when modify, the new location (vertical & or horizontal) for the existing point




** point collections
	* point selection collection
		> points that the user provides
		> collection types
			* path, region by selection, etc, etc.
		> point types
			* root (beg, corner), path intermediate, path end, corner intermediate, corner end
		> point status
			* definition

	* point definition collection
		> new points to create - &/or -
		> existing points to revise
		> collection types
			* path, rows
		> point types
			* root (beg, corner, row)
			* row (beg)
			* intermediate
			* term (end, corner, row)
			* row (end)
		> point status
			* existing or new

	* point functional usage
		* user provides the point selection collection
			> determined by user selected function
		* user provides the modification parameters
		* pgm creates the point definition collection



CODE LOCATIONS

Shared Code
* Code that can be used by a revit or non-revit project


Shared Code Revit
* code that can be used in a revit project but not in a non-revit project (requires access to revit .DLL's)


Shared Code No Revit
* code thatcan be used in a non-revit project but not in a revit project (i.e. faux revit code)

Shared App
* sample project for a window that could be used by multiple projects


Path Elements

* Jack \ ... Functions\PathSelectManager.cs - the "live" version
* Jackrvttst01  Functions\PathSelectManager.cs - faux version - that uses faux data
* Jacktests01   Functions\PathSelectManager.cs -  faux version - that uses faux data

two below to be replaced
* jacktests01\support\info.cs -> PathSegmentType (enum)
* jacktests01\support\pathsegment.cs -> PathSegment

current versions
* shcode \ ... \ PathCompInfo.cs -> PathCompType (enum)
* ShCode \ ... \ PathComponent.cs -> PathComponent
* ShCode \ ... \ PathComponent.cs -> PathCompPoint
* shCode \ ... \ PathDataManager.cs -> PathDataManager
* ShCode \ ... \ PathManager.cs -> PathManager




